% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/docker.R
\name{add_dockerfile}
\alias{add_dockerfile}
\title{Add a Dockerfile to the docker directory}
\usage{
add_dockerfile(
  pkg_path = ".",
  img_path = NULL,
  use_renv = TRUE,
  use_case = "default",
  base_image = NULL,
  repos = NULL
)
}
\arguments{
\item{pkg_path}{Path to the package directory}

\item{img_path}{Path to the write the docker image definition contents; default \code{NULL} will use \verb{docker/} as a sub-directory of the "pkg_path"}

\item{use_renv}{Logical as to whether or not to use renv. Defaults to \code{TRUE}. If \code{FALSE}, package dependencies are scraped from the \code{DESCRIPTION} file and the most recent versions will be installed in the image.}

\item{use_case}{Name of the use case. Defaults to \code{"default"}, which only uses the base boilerplate.}

\item{base_image}{Name of the base image to start \code{FROM}. Default is \code{NULL} and the base image will be derived based on "use_case". Optionally override this by setting the name of the base image (including tag if desired).}

\item{repos}{Option to override the repos used for installing packages with \code{renv} by passing name of repository. Only used if \code{use_renv = TRUE}. Default is \code{NULL} meaning that the repos specified in \code{renv} lockfile will remain as-is and not be overridden.}
}
\value{
(Invisible) A list of package info returned by \link{pkg_info}. Also called for side-effect, creates Dockerfile.
}
\description{
Add a Dockerfile to the docker directory
}
\examples{
\dontrun{
add_dockerfile(base_image="rocker/r-ver:4.2.2", use_renv=TRUE)
add_dockerfile(base_image="rocker/r-ver:4.2.2", use_renv=TRUE, use_case="helloworld")
add_dockerfile(base_image="rocker/r-ver:4.2.2", use_renv=FALSE)
add_dockerfile(base_image="rocker/r-ver:4.2.2", use_renv=FALSE, use_case="helloworld")

# Shiny
# FIXME: pare down this example
add_dockerfile(base_image="rocker/shiny:4.2.2", use_renv=FALSE, use_case="shiny")
fs::file_copy("inst/shiny/app.R", "docker", overwrite=TRUE)
build_image(cache=FALSE)
# Run container, go to <http://localhost:3838/>.

}
}
