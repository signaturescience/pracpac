% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/docker.R
\name{use_docker}
\alias{use_docker}
\title{Use docker packaging tools}
\usage{
use_docker(
  pkg_path = ".",
  img_path = NULL,
  use_renv = TRUE,
  base_image = "rocker/r-ver:latest",
  other_packages = NULL,
  build = TRUE,
  repos = NULL
)
}
\arguments{
\item{pkg_path}{Path to the package directory}

\item{img_path}{Path to the write the docker image definition contents; default \code{NULL} will use \verb{docker/} as a sub-directory of the "pkg_path"}

\item{use_renv}{Logical as to whether or not to use renv. Defaults to \code{TRUE}. If \code{FALSE}, package dependencies are scraped from the \code{DESCRIPTION} file and the most recent versions will be installed in the image.}

\item{base_image}{Name of base image to start \code{FROM} in Dockerfile}

\item{other_packages}{Vector of other packages to be included in \code{renv} lock file; default is \code{NULL}}

\item{build}{Logical as to wether or not the function should build the Docker image; default is \code{TRUE}}

\item{repos}{Option to override the repos used for installing packages with \code{renv} by passing name of repository. Only used if \code{use_renv = TRUE}. Default is \code{NULL} meaning that the repos specified in \code{renv} lockfile will remain as-is and not be overridden.}
}
\value{
(Invisible) A list with information about the package. Primarily called for side effect. Creates \verb{docker/} directory, identifies renv dependencies and creates lock file (if \code{use_renv = TRUE}), writes Dockerfile, builds package tar.gz, moves all relevant assets to the \verb{docker/} directory, and builds Docker image (if \code{build = TRUE}).
}
\description{
Use docker packaging tools
}
\examples{
\dontrun{
use_docker()
}
}
