[{"path":"https://signaturescience.github.io/pracpac/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Signature Science LLC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/basic-usage.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Basic Usage","text":"R packages fundamental units reproducible code R.1 Docker virtualization technology can used bundle application dependencies virtual container can distributed deployed run reproducibly Windows, Linux MacOS operating system. used tandem, tools can help developers deliver software inherently reproducible set dependencies, including specific dependent R packages. R package developer may consider building docker image contains R package. approach can useful various scenarios, one case R package includes functions pre- post-process data also processed domain-specific tool written another language (.e., something couldn’t included R package dependency). developed pracpac goal providing intuitive functions developers use custom R packages Docker together. pracpac package conceptually inspired packages like devtools usethis, dramatically reduce technical burden R package development. pracpac, users can easily create templates necessary files directory structure build Docker image contains R package specific dependency packages, versions optionally frozen via renv.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/basic-usage.html","id":"terminology","dir":"Articles","previous_headings":"","what":"Terminology","title":"Basic Usage","text":"may useful clarify Docker terminology used throughout: Image: Snapshot built define container contents Container: Instantiated image can run host information Docker installation, terminology, usage see https://docs.docker.com/.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/basic-usage.html","id":"using-pracpac","dir":"Articles","previous_headings":"","what":"Using pracpac","title":"Basic Usage","text":"pracpac package designed two things: Template files/directories Docker image containing R package Build Docker image features delivered use_docker() build_image() functions.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/basic-usage.html","id":"use_docker","dir":"Articles","previous_headings":"Using pracpac","what":"use_docker()","title":"Basic Usage","text":"pracpac package includes individual functions add template Dockerfile, build source R package added Docker image, define dependencies package renv lock file. files created moved Docker directory specified user, default set docker/ subdirectory R package. convenience, pracpac functionality wrapped use_docker() function. example follows uses hellow R package ships pracpac. pracpac installed, hellow source code can found following command: motivate basic usage demonstrate use example package copied tempdir(). NOTE: practice, likely convenient use pracpac functions within flow R package development (.e., working directory package root). , file copying may necessary usage. contents hellow package source structured follows: create template Docker image contains hellow R package developer can use use_docker(): defaults set, function create Dockerfile following contents: renv.lock dependencies hellow (case just praise package): use_docker() defaults produce behavior described . However, functionality can customized . example, user can optionally specify use case create variants template files (described detail vignettes). Another option specify img_path defining files used build Docker image written, may useful developers prefer build images within R package root. following shows used write Docker template files directory package root: full list options see ?use_docker.","code":"system.file(\"hellow\", package = \"pracpac\") library(pracpac) library(fs)  ## specify the temp directory tmp <- tempdir() ## create a subdirectory of temp called \"example\" dir_create(path = path(tmp, \"example\")) ## copy the example hellow package to the temp directory dir_copy(path = system.file(\"hellow\", package = \"pracpac\"), new_path = path(tmp, \"example\")) ├── DESCRIPTION ├── LICENSE ├── LICENSE.md ├── NAMESPACE ├── R │   └── hello.R ├── hellow.Rproj └── man     └── isay.Rd use_docker(pkg_path = path(tmp, \"example\", \"hellow\")) ├── DESCRIPTION ├── LICENSE ├── LICENSE.md ├── NAMESPACE ├── R │   └── hello.R ├── docker │   ├── Dockerfile │   ├── hellow_0.1.0.tar.gz │   └── renv.lock ├── hellow.Rproj └── man     └── isay.Rd FROM rocker/r-ver:latest  ## copy the renv.lock into the image COPY renv.lock /renv.lock  ## install renv RUN Rscript -e 'install.packages(c(\"renv\"))'  ## set the renv path var to the renv lib ENV RENV_PATHS_LIBRARY renv/library  ## restore packages from renv.lock RUN Rscript -e 'renv::restore(lockfile = \"/renv.lock\", repos = NULL)'  ## copy in built R package COPY hellow_0.1.0.tar.gz /hellow_0.1.0.tar.gz  ## run script to install built R package from source RUN Rscript -e 'install.packages(\"/hellow_0.1.0.tar.gz\", type='source', repos=NULL)' {   \"R\": {     \"Version\": \"4.0.2\",     \"Repositories\": [       {         \"Name\": \"CRAN\",         \"URL\": \"https://cran.rstudio.com\"       }     ]   },   \"Packages\": {     \"praise\": {       \"Package\": \"praise\",       \"Version\": \"1.0.0\",       \"Source\": \"Repository\",       \"Repository\": \"CRAN\",       \"Hash\": \"a555924add98c99d2f411e37e7d25e9f\",       \"Requirements\": []     }   } } use_docker(pkg_path = path(tmp, \"example\", \"hellow\"), img_path = path(tmp, \"example\")) ├── Dockerfile ├── hellow │   ├── DESCRIPTION │   ├── LICENSE │   ├── LICENSE.md │   ├── NAMESPACE │   ├── R │   │   └── hello.R │   ├── hellow.Rproj │   └── man │       └── isay.Rd ├── hellow_0.1.0.tar.gz"},{"path":"https://signaturescience.github.io/pracpac/articles/basic-usage.html","id":"build_image","dir":"Articles","previous_headings":"Using pracpac","what":"build_image()","title":"Basic Usage","text":"use_docker() function includes option “build”. default parameter set FALSE. pracpac templates likely require editing developer. However, editing Dockerfile constituent files added user can call build_image() build Docker image: Note user specified different img_path use_docker(), path needs used build_image(). default image built tagged name R package “latest” version suffix: tagging scheme can altered “tag” argument. build_image() function also includes parameter leverage Docker build “cache” feature. details see ?build_image. use additional build parameters user can call Docker daemon directly host use client like stevedore.","code":"build_image(pkg_path = path(tmp, \"example\", \"hellow\")) system(\"docker images\") hellow                            0.1.0        e1a9bc2ebbb5   15 seconds ago   828MB hellow                            latest       e1a9bc2ebbb5   15 seconds ago   828MB"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Use Cases","text":"pracpac package enables developers easily incorporate R packages Docker images. follows reproducible demonstration select pracpac use cases. Note vignette means exhaustive, pattern delivering R package within Docker image1 may prove useful scenarios well.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"pipeline","dir":"Articles","previous_headings":"","what":"Pipeline","title":"Use Cases","text":"“pipeline” use case describes scenario developer may want use functions custom R package perform processing input /output domain-specific tool. countless software packages implemented directly R. Developers want leverage tools reproducible context may choose using Docker. tool(s) workflow require(s) upstream downstream processing best suited R code, developer write R package distribute everything together Docker. Besides defining reproducible dependencies, Docker allows developer pass “instructions” container behave. can include scripts run container launched. demonstrate use case use hellow R package source code ships pracpac. write pipeline use isay() function hellow randomly select flavor “Hello”. output piped command-line tool called translate-shell2 translates text another language specified user (default French). container runs, pipeline executed outputs translated results.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"setting-up-the-docker-template","dir":"Articles","previous_headings":"Pipeline","what":"Setting up the Docker template","title":"Use Cases","text":"first move example hellow package temporary location: new directory includes R package source contents hellow: can use use_docker(..., use_case=\"pipeline\") create template files building Docker image: directory now contains docker/ subdirectory, another subdirectory called assets/ templated pipeline scripts: files need edited follows:","code":"library(pracpac) library(fs)  ## specify the temp directory tmp <- tempdir() ## copy the example hellow package to the temp directory dir_copy(path = system.file(\"hellow\", package = \"pracpac\"), new_path = path(tmp, \"example\", \"hellow\")) dir_tree(path(tmp, \"example\", \"hellow\"), recurse = TRUE) ├── DESCRIPTION ├── NAMESPACE ├── R │   └── hello.R └── man     └── isay.Rd use_docker(pkg_path = path(tmp, \"example\", \"hellow\"), use_case = \"pipeline\") Using renv. Dockerfile will build from renv.lock in /tmp/RtmpsMexB6/example/hellow/docker. Using template for the specified use case: pipeline Writing dockerfile: /tmp/RtmpsMexB6/example/hellow/docker/Dockerfile The directory will be created at /tmp/RtmpsMexB6/example/hellow/docker/assets  Assets for the specified use case (pipeline) will be copied there. The specified use case (pipeline) includes the following asset: run.sh The specified use case (pipeline) includes the following asset: pre.R The specified use case (pipeline) includes the following asset: post.R Building package hellow version 0.1.0 in /tmp/RtmpsMexB6/example/hellow/hellow_0.1.0.tar.gz docker build command: docker build  --tag hellow:latest --tag hellow:0.1.0 /tmp/RtmpsMexB6/example/hellow/docker dir_tree(path(tmp, \"example\", \"hellow\"), recurse = TRUE) ├── DESCRIPTION ├── NAMESPACE ├── R │   └── hello.R ├── docker │   ├── Dockerfile │   ├── assets │   │   ├── post.R │   │   ├── pre.R │   │   └── run.sh │   ├── hellow_0.1.0.tar.gz │   └── renv.lock └── man     └── isay.Rd"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"dockerfile","dir":"Articles","previous_headings":"Pipeline > Setting up the Docker template","what":"Dockerfile","title":"Use Cases","text":"","code":"FROM rocker/r-ver:latest  ## copy the renv.lock into the image COPY renv.lock /renv.lock  ## install renv RUN Rscript -e 'install.packages(c(\"renv\"))'  ## set the renv path var to the renv lib ENV RENV_PATHS_LIBRARY renv/library  ## restore packages from renv.lock RUN Rscript -e 'renv::restore(lockfile = \"/renv.lock\", repos = NULL)'  ## copy in built R package COPY hellow_0.1.0.tar.gz /hellow_0.1.0.tar.gz  ## run script to install built R package from source RUN Rscript -e 'install.packages(\"/hellow_0.1.0.tar.gz\", type=\"source\", repos=NULL)'  ## COPY in the pre processing R script and run shell script COPY assets/pre.R /pre.R COPY assets/run.sh /run.sh  ## add the translate-shell tool and dependencies RUN apt-get update && apt-get install -y bsdmainutils translate-shell  ## enter at run shell script ## allows for parameters passed to container at runtime ENTRYPOINT [\"bash\", \"/run.sh\"]"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"run-sh","dir":"Articles","previous_headings":"Pipeline > Setting up the Docker template","what":"run.sh","title":"Use Cases","text":"","code":"#!/bin/bash  ## get tranlsation language from first argument ## default to :fr TOLANG=\"${1:-:fr}\" HELLO=$(Rscript /pre.R)  trans \"$HELLO\" \"$TOLANG\""},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"pre-r","dir":"Articles","previous_headings":"Pipeline > Setting up the Docker template","what":"pre.R","title":"Use Cases","text":"Note case docker/assets/post.R template necessary, can delete :","code":"library(hellow)  isay() file_delete(path(tmp, \"example\", \"hellow\", \"docker\", \"assets\", \"post.R\"))"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"building-the-image","dir":"Articles","previous_headings":"Pipeline","what":"Building the image","title":"Use Cases","text":"template files created edited described , can build image: case, image built build_image() default behavior tagging package name version:","code":"build_image(pkg_path = path(tmp, \"example\", \"hellow\")) system(\"docker images\") hellow                            0.1.0        e1a9bc2ebbb5   15 seconds ago   959MB hellow                            latest       e1a9bc2ebbb5   15 seconds ago   959MB"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"running-the-container","dir":"Articles","previous_headings":"Pipeline","what":"Running the container","title":"Use Cases","text":"Now can run container, either Docker client directly host within R:","code":"system(\"docker run --rm hellow:latest\") You are peachy! [1] \"Hello\"  [1] \"Bonjour\"  Translations of [1] \"Hello\" [ English -> Français ]  [1] \"Hello\"     [1] \"Bonjour\", [1] \"Salut\" system(\"docker run --rm hellow:latest :es\") You are groundbreaking! [1] \"What's up?\"  [1] \"¿Qué pasa?\"  Translations of [1] \"What's up?\" [ English -> Español ]  [1] \"What's up?\"     [1] \"¿Qué pasa?\", [1] \"¿Qué hay de nuevo?\""},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"shiny","dir":"Articles","previous_headings":"","what":"Shiny","title":"Use Cases","text":"“shiny” use case enables quick intuitive templating tools necessary host Shiny app Docker container. number ways developers ship Shiny app inside R package, example follows demonstrates one strategy . demonstrate use case use ocf R package source code ships pracpac. ocf package wraps custom Shiny app ’ve titled “Old Colorful”. app intended provide basic motivation Shiny image templated, built, used pracpac. short, app code uses bones “Old Faithful” Shiny app simply adds feature add color eruptions histogram. color palette selected random palettes wesanderson package via function called get_pal(). function embedded reactive context user clicks button, histogram plot title bar colors dynamically update.","code":""},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"setting-up-the-docker-template-1","dir":"Articles","previous_headings":"Shiny","what":"Setting up the Docker template","title":"Use Cases","text":"first move example ocf package temporary location: can use use_docker(..., use_case=\"shiny\") create template files building Docker image: directory now contains docker/ subdirectory, another subdirectory called assets/ templated Shiny files: One files needs edited follows:","code":"library(pracpac) library(fs)  ## specify the temp directory tmp <- tempdir() ## copy the example ocf package to the temp directory dir_copy(path = system.file(\"ocf\", package = \"pracpac\"), new_path = path(tmp, \"example\", \"ocf\")) dir_tree(path(tmp, \"example\", \"ocf\"), recurse = TRUE) ├── DESCRIPTION ├── NAMESPACE ├── R │   └── pal.R ├── inst │   └── app │       └── app.R └── man     └── get_pal.Rd use_docker(pkg_path = path(tmp, \"example\", \"ocf\"), use_case = \"shiny\") Using renv. Dockerfile will build from renv.lock in /tmp/RtmpsMexB6/example/ocf/docker. Using template for the specified use case: shiny Writing dockerfile: /tmp/RtmpsMexB6/example/ocf/docker/Dockerfile The directory will be created at /tmp/RtmpsMexB6/example/ocf/docker/assets  Assets for the specified use case (shiny) will be copied there. The specified use case (shiny) includes the following asset: app.R Building package ocf version 0.1.0 in /tmp/RtmpsMexB6/example/ocf/ocf_0.1.0.tar.gz docker build command: docker build  --tag ocf:latest --tag ocf:0.1.0 /tmp/RtmpsMexB6/example/ocf/docker dir_tree(path(tmp, \"example\", \"ocf\"), recurse = TRUE) ├── DESCRIPTION ├── NAMESPACE ├── R │   └── pal.R ├── docker │   ├── Dockerfile │   ├── assets │   │   └── app.R │   ├── ocf_0.1.0.tar.gz │   └── renv.lock ├── inst │   └── app │       └── app.R └── man     └── get_pal.Rd"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"app-r","dir":"Articles","previous_headings":"Shiny > Setting up the Docker template","what":"app.R","title":"Use Cases","text":"Note particular example, templated Dockerfile requires editing. cases, may necessary edit Dockerfile modify behavior Shiny server (e.g., edit shiny-server.conf file).","code":"library(shiny) library(ocf)  # Define UI for application that draws a histogram ui <- fluidPage(    # Application title   titlePanel(\"Old Faithful Geyser Data (In Color!)\"),    # Sidebar with a slider input for number of bins   sidebarLayout(     sidebarPanel(       sliderInput(\"bins\",                   \"Number of bins:\",                   min = 1,                   max = 50,                   value = 30),       actionButton(inputId = \"color\", label = \"Add Color\")     ),      # Show a plot of the generated distribution     mainPanel(       plotOutput(\"distPlot\")     )   ) )  # Define server logic required to draw a histogram server <- function(input, output) {    color_palette <- eventReactive(input$color, {     get_pal()   })    output$distPlot <- renderPlot({     # generate bins based on input$bins from ui.R     x    <- faithful[, 2]     bins <- seq(min(x), max(x), length.out = input$bins + 1)      # draw the histogram with the specified number of bins     hist(x,          breaks = bins,          col = color_palette()[[1]][1],          border = color_palette()[[1]][5],          main = paste0(\"Histogram in \", names(color_palette())))   }) }  # Run the application shinyApp(ui = ui, server = server)"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"building-the-image-1","dir":"Articles","previous_headings":"Shiny","what":"Building the image","title":"Use Cases","text":"template files created edited described , can build image: case, image built build_image() default behavior tagging package name version:","code":"build_image(pkg_path = path(tmp, \"example\", \"ocf\")) system(\"docker images\")"},{"path":"https://signaturescience.github.io/pracpac/articles/use-cases.html","id":"running-the-container-1","dir":"Articles","previous_headings":"Shiny","what":"Running the container","title":"Use Cases","text":"Now can run container, either Docker client directly host within R: case run container detached (-d) use port 3838 can navigate localhost:3838 web browser view running app.","code":"system(\"docker run --rm -it -d --user shiny -p 3838:3838 ocf:0.1.0\")"},{"path":"https://signaturescience.github.io/pracpac/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephen Turner. Author. VP Nagraj. Maintainer, author. Signature Science, LLC.. Copyright holder.","code":""},{"path":"https://signaturescience.github.io/pracpac/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Turner S, Nagraj V (2023). pracpac: Practical 'R' Packaging 'Docker'. https://signaturescience.github.io/pracpac/, https://github.com/signaturescience/pracpac/.","code":"@Manual{,   title = {pracpac: Practical 'R' Packaging in 'Docker'},   author = {Stephen Turner and VP Nagraj},   year = {2023},   note = {https://signaturescience.github.io/pracpac/, https://github.com/signaturescience/pracpac/}, }"},{"path":"https://signaturescience.github.io/pracpac/index.html","id":"pracpac-","dir":"","previous_headings":"","what":"Practical R Packaging in Docker","title":"Practical R Packaging in Docker","text":"pracpac: Practical R Packaging Docker goal pracpac provide usethis-like interface create Docker images R packages development. pracpac package uses renv default, ensuring reproducibility building dependency packages inside container image mirroring installed developer’s system. pracpac package can used containerize R package deploy domain-specific non-R tools, Shiny applications, entire data analysis pipelines.","code":""},{"path":"https://signaturescience.github.io/pracpac/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Practical R Packaging in Docker","text":"Install pracpac CRAN : Install development version pracpac GitHub :","code":"install.packages(\"pracpac\") # install.packages(\"devtools\") devtools::install_github(\"signaturescience/pracpac\", build_vignettes = TRUE)"},{"path":"https://signaturescience.github.io/pracpac/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Practical R Packaging in Docker","text":"Detailed documentation available basic usage use cases vignettes: simple example, running use_docker() inside package directory (1) capture package dependencies installed developers system using renv, (2) build package source tar.gz, (3) create Dockerfile builds image package entire dependency chain, (4) optionally builds Docker image tags set using version package DESCRIPTION. Dockerfile, renv.lock file, package source tar.gz file placed docker/ subdirectory package, added package’s .Rbuildignore. workflow shown figure . Pracpac workflow example, running use_docker() example package included pracpac inst/hellow produce Dockerfile following contents: renv.lock dependencies hellow (case just praise package): default, use_docker() actually build image. can build image build_image() running use_docker(), one step using use_docker(build=TRUE). two-step procedure useful use cases may require edits Dockerfile install system libraries, copy Shiny app pipeline-specific code. See help page ?use_docker use cases vignette (vignette(\"use-cases\", package=\"pracpac\")) details.","code":"vignette(\"basic-usage\", package=\"pracpac\") vignette(\"use-cases\", package=\"pracpac\") FROM rocker/r-ver:latest  ## copy the renv.lock into the image COPY renv.lock /renv.lock  ## install renv and biocmanager RUN Rscript -e 'install.packages(c(\"renv\",\"BiocManager\"), repos=\"https://cloud.r-project.org\")'  ## set the renv path var to the renv lib ENV RENV_PATHS_LIBRARY renv/library  ## restore packages from renv.lock RUN Rscript -e 'renv::restore(lockfile = \"/renv.lock\", repos = NULL)'  ## copy in built R package COPY hellow_0.1.0.tar.gz /hellow_0.1.0.tar.gz  ## run script to install built R package from source RUN Rscript -e \"install.packages('/hellow_0.1.0.tar.gz', type='source', repos=NULL)\" {   \"R\": {     \"Version\": \"4.0.2\",     \"Repositories\": [       {         \"Name\": \"CRAN\",         \"URL\": \"https://cran.rstudio.com\"       }     ]   },   \"Packages\": {     \"praise\": {       \"Package\": \"praise\",       \"Version\": \"1.0.0\",       \"Source\": \"Repository\",       \"Repository\": \"CRAN\",       \"Hash\": \"a555924add98c99d2f411e37e7d25e9f\",       \"Requirements\": []     }   } }"},{"path":"https://signaturescience.github.io/pracpac/reference/add_assets.html","id":null,"dir":"Reference","previous_headings":"","what":"Add assets for the specified use case — add_assets","title":"Add assets for the specified use case — add_assets","text":"Add template assets use case specified add_dockerfile use_docker.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_assets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add assets for the specified use case — add_assets","text":"","code":"add_assets(   pkg_path = \".\",   img_path = NULL,   use_case = \"default\",   overwrite = TRUE )"},{"path":"https://signaturescience.github.io/pracpac/reference/add_assets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add assets for the specified use case — add_assets","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path. use_case Name use case. Defaults \"default\", uses base boilerplate. overwrite Logical; existing assets overwritten? Default TRUE.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_assets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add assets for the specified use case — add_assets","text":"Invisibly returns assets per handle_use_case. Called primarily side effects.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_assets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add assets for the specified use case — add_assets","text":"Example #1: \"shiny\" use case requires app.R file moved /srv/shiny-server/ container image. Using add_assets(use_case=\"shiny\") (using \"shiny\" use case add_dockerfile use_docker) create placeholder assets/app.R docker/ directory. Dockerfile \"shiny\" use case place COPY assets/app.R/srv/shiny-server Dockerfile. Example #2: \"pipeline\" use case creates boilerplate moving pre- post-processing R shell scripts container add_assets(use_case=\"pipeline\") (using \"pipeline\" use case add_dockerfile use_docker) create placeholder assets/pre.R, assets/post.R, assets/run.sh docker/assets directory. Dockerfile \"pipeline\" use case place COPY assets/run.sh /run.sh Dockerfile. function run part use_docker can used . See vignette(\"use-cases\", package=\"pracpac\") details use cases.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_assets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add assets for the specified use case — add_assets","text":"","code":"if (FALSE) {  # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Add assets for shiny use case add_assets(pkg_path = file.path(tempdir(), \"hellow\"), use_case=\"shiny\") # Add assets for pipeline use case add_assets(pkg_path = file.path(tempdir(), \"hellow\"), use_case=\"pipeline\") }"},{"path":"https://signaturescience.github.io/pracpac/reference/add_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Dockerfile to the docker directory — add_dockerfile","title":"Add a Dockerfile to the docker directory — add_dockerfile","text":"Adds Dockerfile docker directory created create_docker_dir. Allows specification several preset use cases, whether use use renv manage dependencies, optional overriding base image.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Dockerfile to the docker directory — add_dockerfile","text":"","code":"add_dockerfile(   pkg_path = \".\",   img_path = NULL,   use_renv = TRUE,   use_case = \"default\",   base_image = NULL,   repos = NULL )"},{"path":"https://signaturescience.github.io/pracpac/reference/add_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Dockerfile to the docker directory — add_dockerfile","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path. use_renv Logical; use renv? Defaults TRUE. FALSE, package dependencies scraped DESCRIPTION file recent versions installed image. use_case Name use case. Defaults \"default\", uses base boilerplate. See vignette(\"use-cases\", package=\"pracpac\") use cases (e.g., shiny, rstudio, pipeline). base_image Name base image start . Default NULL base image derived based use_case. Optionally override setting name base image (including tag desired). repos Option override repos used installing packages renv passing name repository. used use_renv = TRUE. Default NULL meaning repos specified renv lockfile remain -overridden.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Dockerfile to the docker directory — add_dockerfile","text":"Invisibly returns list package info returned pkg_info. Primarily called side-effect create Dockerfile.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_dockerfile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a Dockerfile to the docker directory — add_dockerfile","text":"function run part use_docker can used . See vignette(\"use-cases\", package=\"pracpac\") details use cases.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/add_dockerfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Dockerfile to the docker directory — add_dockerfile","text":"","code":"if (FALSE) {  # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Default: FROM rocker/r-ver:latest with no additional template # By default add_dockerfile requires you either to specify use_renv = FALSE # Or run renv_deps() prior to add_dockerfile() # The use_docker() wrapper runs these sequentially, and is recommended for most usage add_dockerfile(pkg_path = file.path(tempdir(), \"hellow\"), use_renv = FALSE) # Specify tidyverse base image renv_deps(pkg_path = file.path(tempdir(), \"hellow\")) add_dockerfile(pkg_path = file.path(tempdir(), \"hellow\"), base_image=\"rocker/tidyverse:4.2.2\") # Specify different default repo add_dockerfile(pkg_path = file.path(tempdir(), \"hellow\"), repos=\"https://cran.wustl.edu/\") # RStudio template add_dockerfile(pkg_path = file.path(tempdir(), \"hellow\"), use_case=\"rstudio\") # Shiny template add_dockerfile(pkg_path = file.path(tempdir(), \"hellow\"), use_case = \"shiny\") # Pipeline template add_dockerfile(pkg_path = file.path(tempdir(), \"hellow\"), use_case=\"pipeline\") }"},{"path":"https://signaturescience.github.io/pracpac/reference/build_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Docker image — build_image","title":"Build a Docker image — build_image","text":"Builds Docker image created use_docker add_dockerfile. function run part use_docker build = TRUE set, can used .","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/build_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Docker image — build_image","text":"","code":"build_image(   pkg_path = \".\",   img_path = NULL,   cache = TRUE,   tag = NULL,   build = TRUE )"},{"path":"https://signaturescience.github.io/pracpac/reference/build_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Docker image — build_image","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path. cache Logical; caching used? Default TRUE. Set FALSE use ---cache docker build. tag Image tag use; default NULL image tagged package name version pkg_info. build Logical whether image built. Default TRUE, FALSE docker build command messaged.  Setting build=FALSE useful additional docker build options different tags desired. either case docker build command returned invisibly.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/build_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Docker image — build_image","text":"Invisibly returns docker build command. Primarily called side effects, runs docker build system command.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/build_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a Docker image — build_image","text":"","code":"if (FALSE) { # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Run use_docker to create Docker directory and assets for the example package use_docker(pkg_path = file.path(tempdir(), \"hellow\"))  # Build the image build_image(pkg_path = file.path(tempdir(), \"hellow\")) # Or construct the image build command without building build_cmd <- build_image(pkg_path = file.path(tempdir(), \"hellow\"), build=FALSE) build_cmd }"},{"path":"https://signaturescience.github.io/pracpac/reference/build_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a package tar.gz — build_pkg","title":"Build a package tar.gz — build_pkg","text":"Builds package source tar.gz using pkgbuild::build moves user-specified location (default docker/).","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/build_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a package tar.gz — build_pkg","text":"","code":"build_pkg(pkg_path = \".\", img_path = NULL, ...)"},{"path":"https://signaturescience.github.io/pracpac/reference/build_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a package tar.gz — build_pkg","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path. ... Additional optional arguments passed pkgbuild::build.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/build_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a package tar.gz — build_pkg","text":"Invisibly returns list package info returned pkg_info, tar.gz source destination file paths.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/build_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a package tar.gz — build_pkg","text":"","code":"if (FALSE) { # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Build the example package from tempdir() build_pkg(pkg = file.path(tempdir(), \"hellow\")) }"},{"path":"https://signaturescience.github.io/pracpac/reference/create_docker_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Docker directory — create_docker_dir","title":"Create Docker directory — create_docker_dir","text":"Creates docker/ directory given package. default, assumes docker/ subdirectory specified package path.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/create_docker_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Docker directory — create_docker_dir","text":"","code":"create_docker_dir(pkg_path = \".\", img_path = NULL)"},{"path":"https://signaturescience.github.io/pracpac/reference/create_docker_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Docker directory — create_docker_dir","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/create_docker_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Docker directory — create_docker_dir","text":"Invisibly returns list package info returned pkg_info. Primarily called side-effect create docker directory.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/create_docker_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Docker directory — create_docker_dir","text":"function run part use_docker can used .","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/create_docker_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Docker directory — create_docker_dir","text":"","code":"if (FALSE) { # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Assuming default behavior then docker/ will be created under source root create_docker_dir(pkg_path = file.path(tempdir(), \"hellow\"))  # Alternatively you can specify another directory above, below, or beside package source create_docker_dir(pkg_path = file.path(tempdir(), \"hellow\"), img_path = file.path(tempdir(), \"img\")) }"},{"path":"https://signaturescience.github.io/pracpac/reference/handle_use_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle the use case — handle_use_case","title":"Handle the use case — handle_use_case","text":"unexported helper function internally handles provided use case.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/handle_use_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle the use case — handle_use_case","text":"","code":"handle_use_case(use_case)"},{"path":"https://signaturescience.github.io/pracpac/reference/handle_use_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle the use case — handle_use_case","text":"use_case specified use case.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/handle_use_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle the use case — handle_use_case","text":"List parsed information use case including, name use case, path Dockerfile template, base image, path assets (delimited ; multiple NA none).","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://signaturescience.github.io/pracpac/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about the current package — pkg_info","title":"Get information about the current package — pkg_info","text":"Returns information current package list can passed functions.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about the current package — pkg_info","text":"","code":"pkg_info(pkg_path = \".\", ...)"},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about the current package — pkg_info","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. ... Arguments passed rprojroot::find_package_root_file.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about the current package — pkg_info","text":"list information package. pkgroot: Root directory package. pkgdeps: Package dependencies Imports DESCRIPTION. descfile: File path DESCRIPTION file. pkgname: Package name. pkgver: Package version.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about the current package — pkg_info","text":"","code":"if (FALSE) { # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # This will succeed if this is a package pkg_info(pkg_path = file.path(tempdir(), \"hellow\")) # This will fail if this is not a package location pkg_info(pkg_path = tempdir()) }"},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Find package root — pkg_root","title":"Find package root — pkg_root","text":"Unexported helper find root R package. Returns error path specified R package.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find package root — pkg_root","text":"","code":"pkg_root(pkg_path = \".\", ...)"},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find package root — pkg_root","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. ... Arguments passed rprojroot::find_package_root_file.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pkg_root.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find package root — pkg_root","text":"file path package root. package found root function stop error message.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/pracpac-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pracpac: Practical 'R' Packaging in 'Docker' — pracpac-package","title":"pracpac: Practical 'R' Packaging in 'Docker' — pracpac-package","text":"Streamline creation 'Docker' images 'R' packages dependencies embedded. 'pracpac' package provides 'usethis'-like interface creating Dockerfiles dependencies managed 'renv'. 'pracpac' functionality described Nagraj Turner (2023) doi:10.48550/arXiv.2303.07876 .","code":""},{"path":[]},{"path":"https://signaturescience.github.io/pracpac/reference/pracpac-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pracpac: Practical 'R' Packaging in 'Docker' — pracpac-package","text":"Maintainer: VP Nagraj nagraj@nagraj.net (ORCID) Authors: Stephen Turner (ORCID) contributors: Signature Science, LLC. [copyright holder]","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/renv_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dependencies using renv — renv_deps","title":"Get dependencies using renv — renv_deps","text":"Get dependencies using renv. function inspect package specified pkg_path (default current working directory, .), create renv lock file (renv.lock) docker/ directory. information renv implementation provided Details section.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/renv_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dependencies using renv — renv_deps","text":"","code":"renv_deps(   pkg_path = \".\",   img_path = NULL,   other_packages = NULL,   overwrite = TRUE,   consent_renv = TRUE )"},{"path":"https://signaturescience.github.io/pracpac/reference/renv_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dependencies using renv — renv_deps","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path. other_packages Vector packages included renv lock file; default NULL. overwrite Logical; existing lock file overwritten? Default TRUE. consent_renv Logical; give renv consent session options(renv.consent = TRUE)? Default TRUE. See renv::consent details.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/renv_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dependencies using renv — renv_deps","text":"Invisibly returns list package info returned pkg_info. Primarily called side effect. Writes renv lock file docker/ directory.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/renv_deps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get dependencies using renv — renv_deps","text":"renv.lock file capture package's dependencies (dependencies) current version installed system time function run. using default use_renv=TRUE use_docker add_dockerfile, resulting Dockerfile install packages renv.lock file using renv::restore. ensures versions dependencies image mirror installed system time image creation, rather potentially newer versions package repositories like CRAN Bioconductor, may come breaking changes unaware time package development. additional R packages may useful Docker image plan build (may captured package dependencies), can add packages renv procedure \"other_packages\" argument. function run part use_docker can used .","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/renv_deps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dependencies using renv — renv_deps","text":"","code":"if (FALSE) { # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Run using defaults; only gets current package dependencies renv_deps(pkg_path = file.path(tempdir(), \"hellow\")) # Add additional packages not explicitly required by your package renv_deps(pkg_path = file.path(tempdir(), \"hellow\"), other_packages=c(\"shiny\", \"knitr\")) }"},{"path":"https://signaturescience.github.io/pracpac/reference/use_docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Use docker packaging tools — use_docker","title":"Use docker packaging tools — use_docker","text":"Wrapper function around pracpac functions. See help functions linked detail individual functions. arguments use_docker() passed downstream functions. use_docker() sequentially run: pkg_info get information current R package. create_docker_dir create docker/ directory specified location, already exist. renv_deps (use_renv=TRUE, default) capture package dependencies renv create renv.lock file add_dockerfile create Dockerfile using template specified use_case add_assets depending use_case build_pkg build current R package source .tar.gz, place docker/ directory build_image optional, default FALSE; TRUE, build Docker image. default build=FALSE means everything build_image() run, image actually built. Instead, use_docker() message docker build command, return string $buildcmd invisibly returned output. See vignette(\"use-cases\", package=\"pracpac\") details use cases.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/use_docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use docker packaging tools — use_docker","text":"","code":"use_docker(   pkg_path = \".\",   img_path = NULL,   use_renv = TRUE,   use_case = \"default\",   base_image = NULL,   other_packages = NULL,   build = FALSE,   repos = NULL,   overwrite_assets = TRUE,   overwrite_renv = TRUE,   consent_renv = TRUE )"},{"path":"https://signaturescience.github.io/pracpac/reference/use_docker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use docker packaging tools — use_docker","text":"pkg_path Path package directory. Default \".\" current working directory, assumes developer working R package root. However, can set another path needed. img_path Path write docker image definition contents. default NULL use docker/ subdirectory pkg_path. use_renv Logical; use renv? Defaults TRUE. FALSE, package dependencies scraped DESCRIPTION file without version information. use_case Name use case. Defaults \"default\", uses base boilerplate. base_image Name base image start . Default NULL base image derived based use_case. Optionally override setting name base image (including tag desired). other_packages Vector packages included renv lock file; default NULL. build Logical whether image built. Default TRUE, FALSE docker build command messaged.  Setting build=FALSE useful additional docker build options different tags desired. either case docker build command returned invisibly. repos Option override repos used installing packages renv passing name repository. used use_renv = TRUE. Default NULL meaning repos specified renv lockfile remain -overridden. overwrite_assets Logical; existing asset files overwritten? Default TRUE. overwrite_renv Logical; existing lock file overwritten? Default TRUE; ignored use_renv = TRUE. consent_renv Logical; give renv consent session options(renv.consent = TRUE)? Default TRUE. See renv::consent details.","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/use_docker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use docker packaging tools — use_docker","text":"Invisibly returns list information package ($info) docker build command ($buildcmd). Primarily called side effect. Creates docker/ directory, identifies renv dependencies creates lock file (use_renv = TRUE), writes Dockerfile, builds package tar.gz, moves relevant assets docker/ directory, builds Docker image (build = TRUE).","code":""},{"path":"https://signaturescience.github.io/pracpac/reference/use_docker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use docker packaging tools — use_docker","text":"","code":"if (FALSE) {  # Specify path to example package source and copy to tempdir() # Note that in practice you do not need to copy to a tempdir() # And in fact it may be easiest to use pracpac relative to your package directory root ex_pkg_src <- system.file(\"hellow\", package = \"pracpac\", mustWork = TRUE) file.copy(from = ex_pkg_src, to = tempdir(), recursive = TRUE)  # Run use_docker to create Docker directory and assets for the example package use_docker(pkg_path = file.path(tempdir(), \"hellow\")) # To not use renv use_docker(pkg_path = file.path(tempdir(), \"hellow\"), use_renv=FALSE) # To specify a use case use_docker(pkg_path = file.path(tempdir(), \"hellow\"), use_case=\"pipeline\") # To overwrite the default base image use_docker(pkg_path = file.path(tempdir(), \"hellow\"), base_image=\"alpine:latest\") }"},{"path":"https://signaturescience.github.io/pracpac/news/index.html","id":"pracpac-020","dir":"Changelog","previous_headings":"","what":"pracpac 0.2.0","title":"pracpac 0.2.0","text":"CRAN release: 2023-06-18","code":""},{"path":[]},{"path":"https://signaturescience.github.io/pracpac/news/index.html","id":"shiny-use-case-documentation-0-2-0","dir":"Changelog","previous_headings":"New Features","what":"Shiny use case documentation","title":"pracpac 0.2.0","text":"release, pracpac now includes documentation “shiny” use case. package now features vignette dedicated templating Docker image host Shiny web app. motivate example usage, now also another example package pracpac source inst/ocf.","code":""},{"path":[]},{"path":"https://signaturescience.github.io/pracpac/news/index.html","id":"renv_deps-and-strictly-versioned-package-depedencies-0-2-0","dir":"Changelog","previous_headings":"Bug Fixes","what":"renv_deps() and strictly versioned package depedencies","title":"pracpac 0.2.0","text":"Previously renv_deps() function able parse dependencies DESCRIPTION file stated strict versions packages. function can now handle case, dependencies DESCRIPTION (whether include strict version number ) passed renv snapshot procedure.","code":""},{"path":"https://signaturescience.github.io/pracpac/news/index.html","id":"pracpac-010","dir":"Changelog","previous_headings":"","what":"pracpac 0.1.0","title":"pracpac 0.1.0","text":"CRAN release: 2023-03-21 Initial release! information see https://doi.org/10.48550/arXiv.2303.07876 browseVignettes(package = \"pracpac\").","code":""}]
